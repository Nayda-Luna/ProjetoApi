// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoApi.Data;

#nullable disable

namespace ProjetoApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241212011404_MigracaoUsuario")]
    partial class MigracaoUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoApi.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Título")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_TAREFAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classe = 2,
                            Descricao = "Estudar para á prova",
                            Observacao = "Andamento",
                            Título = "Estudar",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Classe = 3,
                            Descricao = "Viagem para pesquisa/trabalho da universidade",
                            Observacao = "Não iniciado",
                            Título = "Viagem",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Classe = 1,
                            Descricao = "Fazer atividade em grupo na casa da Mariana",
                            Observacao = "Concluido",
                            Título = "Trablho em grupo",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            Classe = 3,
                            Descricao = "Aniversario de uma amiga",
                            Observacao = "nao iniciada",
                            Título = "Compromisso",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("ProjetoApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Usuário");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 188, 114, 94, 115, 126, 72, 207, 191, 133, 142, 62, 180, 59, 255, 76, 100, 190, 184, 225, 98, 34, 188, 54, 57, 39, 230, 188, 187, 28, 134, 42, 90, 116, 196, 77, 79, 224, 184, 147, 134, 171, 66, 29, 117, 208, 0, 60, 170, 154, 79, 196, 21, 40, 118, 244, 50, 227, 236, 166, 230, 43, 207, 11, 135 },
                            PasswordSalt = new byte[] { 3, 123, 170, 169, 119, 187, 210, 218, 205, 107, 160, 63, 167, 221, 159, 127, 70, 121, 231, 56, 245, 240, 180, 140, 170, 51, 201, 52, 173, 224, 41, 80, 126, 70, 221, 179, 0, 141, 199, 245, 62, 120, 51, 167, 176, 89, 216, 93, 250, 196, 71, 108, 34, 106, 184, 148, 185, 165, 226, 11, 110, 78, 124, 36, 243, 227, 131, 33, 244, 93, 238, 158, 114, 14, 55, 193, 152, 154, 226, 207, 50, 188, 9, 85, 113, 157, 164, 195, 133, 60, 208, 160, 37, 171, 171, 52, 23, 169, 247, 78, 84, 243, 60, 214, 29, 33, 175, 170, 122, 73, 173, 63, 80, 81, 186, 96, 58, 154, 126, 59, 249, 117, 101, 121, 121, 209, 75, 226 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("ProjetoApi.Models.Tarefa", b =>
                {
                    b.HasOne("ProjetoApi.Models.Usuario", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoApi.Models.Usuario", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
