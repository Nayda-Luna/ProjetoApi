// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoApi.Data;

#nullable disable

namespace ProjetoApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241130225052_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoApi.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Título")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_TAREFAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classe = 2,
                            Descricao = "Estudar para á prova",
                            Observacao = "Andamento",
                            Título = "Estudar"
                        },
                        new
                        {
                            Id = 2,
                            Classe = 3,
                            Descricao = "Viagem para pesquisa/trabalho da universidade",
                            Observacao = "Não iniciado",
                            Título = "Viagem"
                        },
                        new
                        {
                            Id = 3,
                            Classe = 1,
                            Descricao = "Fazer atividade em grupo na casa da Mariana",
                            Observacao = "Concluido",
                            Título = "Trablho em grupo"
                        },
                        new
                        {
                            Id = 4,
                            Classe = 3,
                            Descricao = "Aniversario de uma amiga",
                            Observacao = "nao iniciada",
                            Título = "Compromisso"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
